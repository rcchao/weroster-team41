generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Activity {
  id            Int            @id
  name          String?        @db.VarChar(255)
  group_id      Int?
  location_id   Int?
  ActivityGroup ActivityGroup? @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Activity_ibfk_1")
  Location      Location?      @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Activity_ibfk_2")
  Event         Event[]

  @@index([group_id], map: "group_id")
  @@index([location_id], map: "location_id")
}

model ActivityGroup {
  id       Int        @id
  name     String?    @db.VarChar(255)
  Activity Activity[]
}

model AssignmentRequest {
  id       Int     @id
  user_id  Int?
  event_id Int?
  status   String? @db.VarChar(255)
  User     User?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "AssignmentRequest_ibfk_1")
  Event    Event?  @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "AssignmentRequest_ibfk_2")

  @@index([event_id], map: "event_id")
  @@index([user_id], map: "user_id")
}

model Campus {
  id          Int        @id
  name        String?    @db.VarChar(255)
  hospital_id Int?
  Hospital    Hospital?  @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Campus_ibfk_1")
  Location    Location[]
  Roster      Roster[]
  User        User[]

  @@index([hospital_id], map: "hospital_id")
}

model Designation {
  id              Int               @id
  title           String?           @db.VarChar(255)
  description     String?           @db.VarChar(255)
  EventAssignment EventAssignment[]
  User            User[]
}

model Event {
  id                Int                 @id
  activity_id       Int?
  location_id       Int?
  start_time        DateTime?           @db.DateTime(0)
  end_time          DateTime?           @db.DateTime(0)
  AssignmentRequest AssignmentRequest[]
  Activity          Activity?           @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Event_ibfk_1")
  Location          Location?           @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Event_ibfk_2")
  EventAssignment   EventAssignment[]

  @@index([activity_id], map: "activity_id")
  @@index([location_id], map: "location_id")
}

model EventAssignment {
  id             Int          @id
  event_id       Int?
  user_id        Int?
  designation_id Int?
  Event          Event?       @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "EventAssignment_ibfk_1")
  User           User?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "EventAssignment_ibfk_2")
  Designation    Designation? @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "EventAssignment_ibfk_3")

  @@index([designation_id], map: "designation_id")
  @@index([event_id], map: "event_id")
  @@index([user_id], map: "user_id")
}

model Hospital {
  id      Int      @id
  name    String?  @db.VarChar(255)
  address String?  @db.VarChar(255)
  Campus  Campus[]
  Roster  Roster[]
  User    User[]
}

model Leave {
  id            Int        @id
  user_id       Int?
  leave_type_id Int?
  start_date    DateTime?  @db.DateTime(0)
  end_date      DateTime?  @db.DateTime(0)
  status        String?    @db.VarChar(255)
  User          User?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Leave_ibfk_1")
  LeaveType     LeaveType? @relation(fields: [leave_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Leave_ibfk_2")

  @@index([leave_type_id], map: "leave_type_id")
  @@index([user_id], map: "user_id")
}

model LeaveType {
  id          Int     @id
  name        String? @db.VarChar(255)
  description String? @db.VarChar(255)
  Leave       Leave[]
}

model Location {
  id        Int        @id
  name      String?    @db.VarChar(255)
  campus_id Int?
  Activity  Activity[]
  Event     Event[]
  Campus    Campus?    @relation(fields: [campus_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Location_ibfk_1")

  @@index([campus_id], map: "campus_id")
}

model Roster {
  id          Int       @id
  campus_id   Int?
  hospital_id Int?
  week_start  DateTime? @db.DateTime(0)
  Campus      Campus?   @relation(fields: [campus_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Roster_ibfk_1")
  Hospital    Hospital? @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Roster_ibfk_2")

  @@index([campus_id], map: "campus_id")
  @@index([hospital_id], map: "hospital_id")
}

model User {
  id                Int                 @id
  first_name        String?             @db.VarChar(255)
  last_name         String?             @db.VarChar(255)
  email             String?             @db.VarChar(255)
  phone             String?             @db.VarChar(255)
  designation_id    Int?
  campus_id         Int?
  hospital_id       Int?
  role              String?             @db.VarChar(255)
  AssignmentRequest AssignmentRequest[]
  EventAssignment   EventAssignment[]
  Leave             Leave[]
  Designation       Designation?        @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "User_ibfk_1")
  Campus            Campus?             @relation(fields: [campus_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "User_ibfk_2")
  Hospital          Hospital?           @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "User_ibfk_3")
  UserSession       UserSession[]

  @@index([campus_id], map: "campus_id")
  @@index([designation_id], map: "designation_id")
  @@index([hospital_id], map: "hospital_id")
}

model UserSession {
  id         Int       @id
  user_id    Int?
  token      String?   @db.VarChar(255)
  expires_at DateTime? @db.DateTime(0)
  User       User?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "UserSession_ibfk_1")

  @@index([user_id], map: "user_id")
}
